<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.lgtm.test</groupId>
  <artifactId>securibench</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>securibench</name>
  <url>http://maven.apache.org</url>
  <dependencies>
      <dependency>
          <groupId>org.checkerframework</groupId>
          <artifactId>checker-qual</artifactId>
          <version>3.41.0</version>
      </dependency>
      <dependency>
          <groupId>edu.ucr.cs.riple.taint</groupId>
          <artifactId>ucrtainting-checker-qual</artifactId>
          <version>0.3-SNAPSHOT</version>
      </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
  <groupId>com.jfinal</groupId>
  <artifactId>cos</artifactId>
  <version>2017.5</version>
</dependency>
  </dependencies>

    <profiles>
        <profile>
            <!-- Activate to sign jars and build distributable download. -->
            <id>dist</id>

            <!-- This profile is activated when mvn release:perform is called from the command line
                 to actually do a release. If you need this profile active for some reason outside
                 of performing a release, use mvn <command> -Pdist
            -->
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>

            <build>
                <plugins>

                    <plugin>
                        <artifactId>maven-jar-plugin</artifactId>
                        <!--
                                                <executions>
                                                    <execution>
                                                        <phase>package</phase>
                                                        <goals>
                                                            <goal>sign</goal>
                                                        </goals>
                                                    </execution>
                                                </executions>
                        -->
                        <configuration>
                            <!--
                                                        <keystore>codesign.keystore</keystore>
                                                        <alias>OWASP Foundation, Inc.'s GoDaddy.com ID</alias>
                                                        <verify>true</verify>
                            -->
                            <archive>
                                <manifest>
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                </manifest>
                                <manifestEntries>
                                    <Sealed>true</Sealed>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </plugin>

                    <!-- For building the distribution zip file. -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assembly/dist.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-dist</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Performs a full release. See release documentation for information on how to
                         perform an ESAPI release using Maven -->
                    <!--
                         mvn release:prepare was not working as expected, so I'm commenting this out and we
                         are doing all this SCM magic manually for now.  - kevin wall, 2019-04-09
                            <plugin>
                                <groupId>org.apache.maven.plugins</groupId>
                                <artifactId>maven-release-plugin</artifactId>
                                <configuration>
                                    <tagBase>https://github.com/ESAPI/esapi-java-legacy/tags</tagBase>
                                </configuration>
                            </plugin>
                    -->

                </plugins>
            </build>
        </profile>
        <profile>
            <id>checkerframework</id>
            <!-- If you omit the activation block, run mvn with "-P checkerframework" to run checkers. -->
            <activation>
                <jdk>[1.8,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.11.0</version>
                        <configuration>
                            <fork>true</fork> <!-- Must fork or else JVM arguments are ignored. -->
                            <compilerArguments>
                                <Xmaxerrs>10000</Xmaxerrs>
                                <Xmaxwarns>10000</Xmaxwarns>
                            </compilerArguments>
                            <annotationProcessorPaths>
                                <!-- <path>
                                    <groupId>com.google.errorprone</groupId>
                                    <artifactId>error_prone_core</artifactId>
                                    <version>2.20.0</version>
                                </path> -->
                                <path>
                                    <groupId>edu.ucr.cs.riple.taint</groupId>
                                    <artifactId>ucrtainting-checker</artifactId>
                                    <version>0.3-SNAPSHOT-securibench</version>
                                </path>
                                <!-- <path>
                                    <groupId>edu.ucr.cs.riple.annotator</groupId>
                                    <artifactId>annotator-scanner</artifactId>
                                    <version>1.3.9-SNAPSHOT</version>
                                </path> -->
                            </annotationProcessorPaths>
                            <annotationProcessors>
                                <annotationProcessor>edu.ucr.cs.riple.taint.ucrtainting.UCRTaintingChecker</annotationProcessor>
                            </annotationProcessors>
                            <compilerArgs>
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                                <arg>-nowarn</arg>
                                <arg>-AannotatedPackages=securibench.micro</arg>
                                <arg>-AenableLibraryCheck=true</arg>
                                <arg>-AenablePolyTaintInference=true</arg>
                                <arg>-AenableTypeArgumentInference=true</arg>
                               <arg>-AenableSerialization</arg>
                               <arg>-AserializationConfigPath=/Users/kknock/RIPLE/taint/securibenchh20180525/annotator-out/checker.xml</arg>
                                <arg>-XDcompilePolicy=simple</arg>
                                <arg>-parameters</arg>
                                <!-- <arg>-Xplugin:ErrorProne -XepDisableAllChecks -Xep:AnnotatorScanner:ERROR -XepOpt:AnnotatorScanner:ConfigPath=/Users/kknock/RIPLE/taint/summer/annotated-code/esapi-java-legacy/annotator-out/core/scanner.xml</arg> -->
                            </compilerArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker</artifactId>
                    <version>3.41.0</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>checkerframework-jdk9orlater</id>
            <activation>
                <jdk>[9,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <fork>true</fork>
                            <compilerArgs combine.children="append">
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <!-- Needed for animal-sniffer-maven-plugin version 1.19 which is broken (version 1.20 is fixed). -->
                <animal.sniffer.skip>true</animal.sniffer.skip>
            </properties>
        </profile>
    </profiles>
</project>
